{"code":"import { isNumber } from \"../validators\";\r\n/**\r\n *\r\n * @param num - the number to round\r\n * @param precision - how many placed after the decimal point to retain (default: 2, i.e. to the hundredth decimal)\r\n * @returns {number} - the rounded number\r\n */\r\nexport function round(num, precision) {\r\n    if (!isNumber(num)) {\r\n        throw 'value to round is not a number';\r\n    }\r\n    if (precision && !isNumber(precision)) {\r\n        throw 'precision value is not a number';\r\n    }\r\n    var factor = precision ? Math.pow(10, precision) : Math.pow(10, 2);\r\n    return Math.round(num * factor) / factor;\r\n}\r\n/**\r\n * Random number in given range, example:\r\n *\r\n * ```javascript\r\n * random(10, 20)\r\n * ```\r\n *\r\n * @param {number} lower bound of random range\r\n * @param {number} upper bound of random range\r\n * @returns {number}\r\n */\r\nexport function random(lower, upper) {\r\n    if (lower === void 0) { lower = 0; }\r\n    if (upper === void 0) { upper = 1; }\r\n    if (!isNumber(lower)) {\r\n        throw 'the lower bound is not a number';\r\n    }\r\n    if (!isNumber(upper)) {\r\n        throw 'the upper bound is not a number';\r\n    }\r\n    if (lower > upper) {\r\n        throw 'the upper bound should be grater than the lower bound';\r\n    }\r\n    if (lower === 0 && upper === 1) {\r\n        return Math.random();\r\n    }\r\n    return lower + Math.floor(Math.random() * (upper - lower + 1));\r\n}\r\n//# sourceMappingURL=index.js.map","map":{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/number/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,QAAQ,EAAC,MAAM,eAAe,CAAC;AAEvC;;;;;GAKG;AACH,MAAM,gBAAgB,GAAG,EAAE,SAAS;IAChC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACjB,MAAM,gCAAgC,CAAC;IAC3C,CAAC;IACD,EAAE,CAAC,CAAC,SAAS,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QACpC,MAAM,iCAAiC,CAAC;IAC5C,CAAC;IACD,IAAM,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACrE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,MAAM,CAAC;AAC7C,CAAC;AAED;;;;;;;;;;GAUG;AAEH,MAAM,iBAAiB,KAAiB,EAAE,KAAiB;IAApC,sBAAA,EAAA,SAAiB;IAAE,sBAAA,EAAA,SAAiB;IACvD,EAAE,CAAA,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAClB,MAAM,iCAAiC,CAAC;IAC5C,CAAC;IACD,EAAE,CAAA,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAClB,MAAM,iCAAiC,CAAC;IAC5C,CAAC;IACD,EAAE,CAAA,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;QACf,MAAM,uDAAuD,CAAC;IAClE,CAAC;IACD,EAAE,CAAA,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;IACzB,CAAC;IACD,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;AACnE,CAAC"},"dts":{"name":"/Users/netanelbasal/www/FE/utils/number/index.d.ts","text":"/**\r\n *\r\n * @param num - the number to round\r\n * @param precision - how many placed after the decimal point to retain (default: 2, i.e. to the hundredth decimal)\r\n * @returns {number} - the rounded number\r\n */\r\nexport declare function round(num: any, precision: any): number;\r\n/**\r\n * Random number in given range, example:\r\n *\r\n * ```javascript\r\n * random(10, 20)\r\n * ```\r\n *\r\n * @param {number} lower bound of random range\r\n * @param {number} upper bound of random range\r\n * @returns {number}\r\n */\r\nexport declare function random(lower?: number, upper?: number): number;\r\n"}}
